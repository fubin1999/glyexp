[{"path":[]},{"path":"https://fubin1999.github.io/glyexp/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://fubin1999.github.io/glyexp/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://fubin1999.github.io/glyexp/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://fubin1999.github.io/glyexp/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://fubin1999.github.io/glyexp/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://fubin1999.github.io/glyexp/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://fubin1999.github.io/glyexp/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://fubin1999.github.io/glyexp/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://fubin1999.github.io/glyexp/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://fubin1999.github.io/glyexp/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://fubin1999.github.io/glyexp/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://fubin1999.github.io/glyexp/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to glyexp","title":"Contributing to glyexp","text":"outlines propose change glyexp. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://fubin1999.github.io/glyexp/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to glyexp","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://fubin1999.github.io/glyexp/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to glyexp","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://fubin1999.github.io/glyexp/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to glyexp","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"fubin1999/glyexp\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://fubin1999.github.io/glyexp/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to glyexp","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://fubin1999.github.io/glyexp/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to glyexp","text":"Please note glyexp project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://fubin1999.github.io/glyexp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 glyexp authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://fubin1999.github.io/glyexp/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with glyexp","title":"Getting help with glyexp","text":"Thanks using glyexp! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://fubin1999.github.io/glyexp/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with glyexp","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://fubin1999.github.io/glyexp/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with glyexp","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://fubin1999.github.io/glyexp/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with glyexp","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://fubin1999.github.io/glyexp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bin Fu. Author, maintainer.","code":""},{"path":"https://fubin1999.github.io/glyexp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fu B (2024). glyexp: Glycoproteomics Glycomics Experiments. R package version 0.0.0.9000, https://fubin1999.github.io/glyexp/.","code":"@Manual{,   title = {glyexp: Glycoproteomics and Glycomics Experiments},   author = {Bin Fu},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://fubin1999.github.io/glyexp/}, }"},{"path":"https://fubin1999.github.io/glyexp/index.html","id":"glyexp","dir":"","previous_headings":"","what":"Glycoproteomics and Glycomics Experiments","title":"Glycoproteomics and Glycomics Experiments","text":"goal glyexp manage data glycoproteomics glycomics experiments tidy way.","code":""},{"path":"https://fubin1999.github.io/glyexp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Glycoproteomics and Glycomics Experiments","text":"can install development version glyexp GitHub :","code":"# install.packages(\"pak\") pak::pak(\"fubin1999/glyexp\")"},{"path":"https://fubin1999.github.io/glyexp/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Glycoproteomics and Glycomics Experiments","text":"Coming soon…","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"class managing expression matrix, sample information, variable information.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"class synchronizes three data types commonly used glycproteomics glycomics research: expression matrix, sample information, variable information. helps ensure three datasets altered sync. example, filtering samples based conditions automatically affect expression matrix sample information.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"name Name experiment.","code":""},{"path":[]},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"Experiment$new() Experiment$get_expr_mat() Experiment$get_sample_info() Experiment$get_var_info() Experiment$filter_samples() Experiment$filter_variables() Experiment$mutate_samples() Experiment$mutate_variables() Experiment$clone()","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"Create new experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"","code":"Experiment$new(   name = NA,   expr_mat = NA,   sample_info = NA,   var_info = NA,   rownames = FALSE )"},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"name Name experiment. expr_mat Expression matrix. Rows variables columns samples. sample_info Sample information, tibble data.frame. first column \"sample\", corresponding column names expr_mat. order samples matter. var_info Variable information, tibble data.frame. first column \"variable\", corresponding row names expr_mat. order variables matter. rownames Whether rownames sample_info var_info used. TRUE, row names sample_info sample_info converted first column (names \"sample\" \"variable\", respectively).","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"method-get-expr-mat-","dir":"Reference","previous_headings":"","what":"Method get_expr_mat()","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"Get copy expression matrix. rows variables columns samples. function get_expr_mat() also provided purpose.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"","code":"Experiment$get_expr_mat()"},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"copy expression matrix.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"method-get-sample-info-","dir":"Reference","previous_headings":"","what":"Method get_sample_info()","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"Get copy sample information tibble. tibble first conserved column \"sample\", rest columns meta data samples, e.g. \"group\", \"batch\", etc. \"sample\" column equals column names expr_mat. function get_sample_info() also provided purpose.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"","code":"Experiment$get_sample_info()"},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"copy sample information tibble.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"method-get-var-info-","dir":"Reference","previous_headings":"","what":"Method get_var_info()","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"Get copy variable information tibble. tibble first conserved column \"variable\", rest columns meta data variables, e.g. \"peptide\", \"protein\", \"glycan_composition\", etc. \"variable\" column equals row names expr_mat. function get_var_info() also provided purpose.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"","code":"Experiment$get_var_info()"},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"copy variable information tibble.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"method-filter-samples-","dir":"Reference","previous_headings":"","what":"Method filter_samples()","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"Filter samples based conditions. function filters samples based conditions specified dplyr::filter() function. example, filter_samples(group == \"\") keep samples \"group\" equal \"\". Experiment object updated place. Experiment object returned invisibly allow chaining.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"","code":"Experiment$filter_samples(...)"},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"... Conditions filtering samples, passed dplyr::filter().","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"method-filter-variables-","dir":"Reference","previous_headings":"","what":"Method filter_variables()","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"Filter variables based conditions. function filters variables based conditions specified dplyr::filter() function. example, filter_variables(type == \"B\") keep variables \"type\" equal \"B\". Experiment object updated place. Experiment object returned invisibly allow chaining.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"","code":"Experiment$filter_variables(...)"},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"... Conditions filtering variables, passed dplyr::filter().","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"method-mutate-samples-","dir":"Reference","previous_headings":"","what":"Method mutate_samples()","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"Mutate sample information. function mutates sample information tibble using dplyr::mutate(). example, mutate_samples(new_group = if_else(new_col = 1) add new column \"new_group\" sample information tibble. Experiment object updated place. Experiment object returned invisibly allow chaining.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"","code":"Experiment$mutate_samples(...)"},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"... Mutations sample information tibble, passed dplyr::mutate().","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"method-mutate-variables-","dir":"Reference","previous_headings":"","what":"Method mutate_variables()","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"Mutate variable information. function mutates variable information tibble using dplyr::mutate(). example, mutate_variables(new_type = if_else(new_col = 1) add new column \"new_type\" variable information tibble. Experiment object updated place. Experiment object returned invisibly allow chaining.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"","code":"Experiment$mutate_variables(...)"},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"... Mutations variable information tibble, passed dplyr::mutate().","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"objects class cloneable method.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"","code":"Experiment$clone(deep = FALSE)"},{"path":"https://fubin1999.github.io/glyexp/reference/Experiment.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for a Glycoproteomics or Glycomics Experiment — Experiment","text":"deep Whether make deep clone.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/create_experiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that Creates a New Experiment Object — create_experiment","title":"Function that Creates a New Experiment Object — create_experiment","text":"Function Creates New Experiment Object","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/create_experiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that Creates a New Experiment Object — create_experiment","text":"","code":"create_experiment(name, expr_mat, sample_info, var_info, rownames = FALSE)"},{"path":"https://fubin1999.github.io/glyexp/reference/create_experiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that Creates a New Experiment Object — create_experiment","text":"name Name experiment. expr_mat Expression matrix. Rows variables columns samples. sample_info Sample information, tibble data.frame. first column \"sample\", corresponding column names expr_mat. order samples matter. var_info Variable information, tibble data.frame. first column \"variable\", corresponding row names expr_mat. order variables matter. rownames Whether rownames sample_info var_info used. TRUE, row names sample_info sample_info converted first column (names \"sample\" \"variable\", respectively).","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/create_experiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that Creates a New Experiment Object — create_experiment","text":"Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/filter_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter samples based on conditions — filter_samples","title":"Filter samples based on conditions — filter_samples","text":"Filter samples based conditions specified dplyr::filter() function. example, filter_samples(exp, group == \"\") keep samples exp \"group\" equal \"\".","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/filter_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter samples based on conditions — filter_samples","text":"","code":"filter_samples(exp, ...)"},{"path":"https://fubin1999.github.io/glyexp/reference/filter_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter samples based on conditions — filter_samples","text":"exp Experiment object. ... Conditions filtering samples, passed dplyr::filter().","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/filter_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter samples based on conditions — filter_samples","text":"new Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/filter_samples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter samples based on conditions — filter_samples","text":"Instead Experiment$filter_samples(), updates Experiment object place, function returns new Experiment object samples filtered. original Experiment object altered. Besides, first argument Experiment object, function used magrittr pipe.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/filter_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter variables based on conditions — filter_variables","title":"Filter variables based on conditions — filter_variables","text":"Filter variables based conditions specified dplyr::filter() function. example, filter_variables(exp, type == \"B\") keep variables exp \"type\" equal \"B\".","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/filter_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter variables based on conditions — filter_variables","text":"","code":"filter_variables(exp, ...)"},{"path":"https://fubin1999.github.io/glyexp/reference/filter_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter variables based on conditions — filter_variables","text":"exp Experiment object. ... Conditions filtering variables, passed dplyr::filter().","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/filter_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter variables based on conditions — filter_variables","text":"new Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/filter_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter variables based on conditions — filter_variables","text":"Instead Experiment$filter_variables(), updates Experiment object place, function returns new Experiment object variables filtered. original Experiment object altered. Besides, first argument Experiment object, function used magrittr pipe.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/get_expr_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the expression matrix — get_expr_mat","title":"Get the expression matrix — get_expr_mat","text":"Get expression matrix Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/get_expr_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the expression matrix — get_expr_mat","text":"","code":"get_expr_mat(exp)"},{"path":"https://fubin1999.github.io/glyexp/reference/get_expr_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the expression matrix — get_expr_mat","text":"exp Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/get_expr_mat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the expression matrix — get_expr_mat","text":"expression matrix.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/get_expr_mat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the expression matrix — get_expr_mat","text":"copy, instead original matrix, returned. prevents original matrix altered. Alteration data Experiment object strictly managed class, expression matrix, sample information, variable information always consistent.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/get_sample_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the sample information — get_sample_info","title":"Get the sample information — get_sample_info","text":"Get sample information Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/get_sample_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the sample information — get_sample_info","text":"","code":"get_sample_info(exp)"},{"path":"https://fubin1999.github.io/glyexp/reference/get_sample_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the sample information — get_sample_info","text":"exp Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/get_sample_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the sample information — get_sample_info","text":"sample information tibble.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/get_sample_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the sample information — get_sample_info","text":"copy, instead original tibble, returned. prevents original tibble altered. Alteration data Experiment object strictly managed class, expression matrix, sample information, variable information always consistent.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/get_var_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the variable information — get_var_info","title":"Get the variable information — get_var_info","text":"Get variable information Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/get_var_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the variable information — get_var_info","text":"","code":"get_var_info(exp)"},{"path":"https://fubin1999.github.io/glyexp/reference/get_var_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the variable information — get_var_info","text":"exp Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/get_var_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the variable information — get_var_info","text":"variable information tibble.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/get_var_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the variable information — get_var_info","text":"copy, instead original tibble, returned. prevents original tibble altered. Alteration data Experiment object strictly managed class, expression matrix, sample information, variable information always consistent.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/mutate_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate samples based on conditions — mutate_samples","title":"Mutate samples based on conditions — mutate_samples","text":"Mutate sample information tibble using dplyr::mutate() function. example, mutate_samples(new_group = if_else(new_col = 1) add new column \"new_group\" sample information tibble.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/mutate_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate samples based on conditions — mutate_samples","text":"","code":"mutate_samples(exp, ...)"},{"path":"https://fubin1999.github.io/glyexp/reference/mutate_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate samples based on conditions — mutate_samples","text":"exp Experiment object. ... Name-value pairs, passed dplyr::mutate().","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/mutate_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutate samples based on conditions — mutate_samples","text":"new Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/mutate_samples.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mutate samples based on conditions — mutate_samples","text":"Instead Experiment$mutate_samples(), updates Experiment object place, function returns new Experiment object sample_info tibble updated. original Experiment object altered. Besides, first argument Experiment object, function used magrittr pipe.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/mutate_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate variables based on conditions — mutate_variables","title":"Mutate variables based on conditions — mutate_variables","text":"Mutate variable information tibble using dplyr::mutate() function. example, mutate_variables(new_group = if_else(new_col = 1) add new column \"new_group\" variable information tibble.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/mutate_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate variables based on conditions — mutate_variables","text":"","code":"mutate_variables(exp, ...)"},{"path":"https://fubin1999.github.io/glyexp/reference/mutate_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate variables based on conditions — mutate_variables","text":"exp Experiment object. ... Name-value pairs, passed dplyr::mutate().","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/mutate_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutate variables based on conditions — mutate_variables","text":"new Experiment object.","code":""},{"path":"https://fubin1999.github.io/glyexp/reference/mutate_variables.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mutate variables based on conditions — mutate_variables","text":"Instead Experiment$mutate_variables(), updates Experiment object place, function returns new Experiment object variable_info tibble updated. original Experiment object altered. Besides, first argument Experiment object, function used magrittr pipe.","code":""}]
